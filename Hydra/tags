!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/1258adf/
0	config.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
0	config.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
0	config1.json	/^      "keywords": ["for", "class", "range", "finally", "is", "return", "continue", "for", "lambd/;"	s	array:files.python.keywords
0	config1.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
0	config2.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
0	config2.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
1	config.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
1	config.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
1	config1.json	/^      "keywords": ["for", "class", "range", "finally", "is", "return", "continue", "for", "lambd/;"	s	array:files.python.keywords
1	config1.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
1	config2.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
1	config2.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
10	config.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
10	config.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
10	config1.json	/^        "try", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with", "as", /;"	s	array:files.python.keywords
10	config1.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
10	config2.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
10	config2.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
11	config.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
11	config.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
11	config1.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
11	config1.json	/^        "try", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with", "as", /;"	s	array:files.python.keywords
11	config2.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
11	config2.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
12	config.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
12	config.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
12	config1.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
12	config1.json	/^        "try", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with", "as", /;"	s	array:files.python.keywords
12	config2.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
12	config2.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
13	config.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
13	config.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
13	config1.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
13	config1.json	/^        "try", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with", "as", /;"	s	array:files.python.keywords
13	config2.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
13	config2.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
14	config.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
14	config.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
14	config1.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
14	config1.json	/^        "try", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with", "as", /;"	s	array:files.python.keywords
14	config2.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
14	config2.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
15	config.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
15	config.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
15	config1.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
15	config1.json	/^        "try", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with", "as", /;"	s	array:files.python.keywords
15	config2.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
15	config2.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
16	config.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
16	config.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
16	config1.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
16	config1.json	/^        "try", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with", "as", /;"	s	array:files.python.keywords
16	config2.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
16	config2.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
17	config.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
17	config.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
17	config1.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
17	config1.json	/^        "try", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with", "as", /;"	s	array:files.python.keywords
17	config2.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
17	config2.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
18	config.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
18	config.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
18	config1.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
18	config1.json	/^        "try", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with", "as", /;"	s	array:files.python.keywords
18	config2.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
18	config2.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
19	config.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
19	config.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
19	config1.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
19	config1.json	/^        "try", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with", "as", /;"	s	array:files.python.keywords
19	config2.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
19	config2.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
2	config.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
2	config.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
2	config1.json	/^      "keywords": ["for", "class", "range", "finally", "is", "return", "continue", "for", "lambd/;"	s	array:files.python.keywords
2	config1.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
2	config2.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
2	config2.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
20	config.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
20	config.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
20	config1.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
20	config1.json	/^        "try", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with", "as", /;"	s	array:files.python.keywords
20	config2.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
20	config2.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
21	config.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
21	config.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
21	config1.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
21	config1.json	/^        "try", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with", "as", /;"	s	array:files.python.keywords
21	config2.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
21	config2.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
22	config.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
22	config.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
22	config1.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
22	config1.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
22	config2.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
22	config2.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
23	config.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
23	config.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
23	config1.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
23	config1.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
23	config2.json	/^        "enum", "extern", "float", "for", "goto", "if", "int", "long", "register", "return", "sh/;"	s	array:files.c.keywords
23	config2.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
24	config.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
24	config.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
24	config1.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
24	config1.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
24	config2.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
24	config2.json	/^        "try", "True", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with"/;"	s	array:files.python.keywords
25	config.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
25	config.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
25	config1.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
25	config1.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
25	config2.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
25	config2.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
26	config.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
26	config.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
26	config1.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
26	config1.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
26	config2.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
26	config2.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
27	config.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
27	config.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
27	config1.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
27	config1.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
27	config2.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
27	config2.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
28	config.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
28	config.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
28	config1.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
28	config1.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
28	config2.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
28	config2.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
29	config.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
29	config.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
29	config1.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
29	config1.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
29	config2.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
29	config2.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
3	config.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
3	config.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
3	config1.json	/^      "keywords": ["for", "class", "range", "finally", "is", "return", "continue", "for", "lambd/;"	s	array:files.python.keywords
3	config1.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
3	config2.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
3	config2.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
30	config.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
30	config.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
30	config1.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
30	config1.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
30	config2.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
30	config2.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
31	config.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
31	config.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
31	config1.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
31	config1.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
31	config2.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
31	config2.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
32	config.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
32	config.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
32	config1.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
32	config1.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
32	config2.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
32	config2.json	/^        "static", "struct", "switch", "typedef", "union", "unsigned", "void", "volatile", "while/;"	s	array:files.c.keywords
33	config.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
33	config1.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
33	config2.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
34	config.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
34	config2.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
35	config.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
35	config2.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
36	config.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
36	config2.json	/^        "or", "yield", "assert", "else", "import", "pass", "break", "except", "in", "raise", "se/;"	s	array:files.python.keywords
4	config.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
4	config.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
4	config1.json	/^      "keywords": ["for", "class", "range", "finally", "is", "return", "continue", "for", "lambd/;"	s	array:files.python.keywords
4	config1.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
4	config2.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
4	config2.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
5	config.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
5	config.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
5	config1.json	/^      "keywords": ["for", "class", "range", "finally", "is", "return", "continue", "for", "lambd/;"	s	array:files.python.keywords
5	config1.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
5	config2.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
5	config2.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
6	config.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
6	config.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
6	config1.json	/^      "keywords": ["for", "class", "range", "finally", "is", "return", "continue", "for", "lambd/;"	s	array:files.python.keywords
6	config1.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
6	config2.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
6	config2.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
7	config.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
7	config.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
7	config1.json	/^      "keywords": ["for", "class", "range", "finally", "is", "return", "continue", "for", "lambd/;"	s	array:files.python.keywords
7	config1.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
7	config2.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
7	config2.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
8	config.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
8	config.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
8	config1.json	/^      "keywords": ["for", "class", "range", "finally", "is", "return", "continue", "for", "lambd/;"	s	array:files.python.keywords
8	config1.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
8	config2.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
8	config2.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
9	config.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
9	config.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
9	config1.json	/^        "try", "def", "from", "nonlocal", "while", "and", "not", "global", "del", "with", "as", /;"	s	array:files.python.keywords
9	config1.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
9	config2.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	s	array:files.python.keywords
9	config2.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	s	array:files.c.keywords
Browser	widgets/Browser.py	/^    class Browser(QWebEngineView):$/;"	c
Browser	widgets/Browser.py	/^    class Browser(QWidget):$/;"	c
Completer	widgets/Editor.py	/^class Completer(QCompleter):$/;"	c
Console	widgets/Terminal.py	/^class Console(QWidget):$/;"	c
Content	widgets/Content.py	/^class Content(QWidget):$/;"	c
DeadCodeCheker	widgets/Events.py	/^class DeadCodeCheker(QThread):$/;"	c
Directory	widgets/Directory.py	/^class Directory(QTreeView):$/;"	c
DocumentSearch	utils/find_utility.py	/^class DocumentSearch(QWidget):$/;"	c
EOF	widgets/Content.py	/^    def EOF(self, data: list) -> None:$/;"	m	class:Content
Editor	widgets/Editor.py	/^class Editor(QPlainTextEdit):$/;"	c
Editor	widgets/TextEditor.py	/^class Editor(QsciScintilla):$/;"	c
EndOfFileSignal	widgets/OpenFile.py	/^    EndOfFileSignal = pyqtSignal(list)$/;"	v	class:OpenFile
Events	widgets/Events.py	/^class Events(QWidget):$/;"	c
FOLDED_STATE	widgets/foldArea.py	/^FOLDED_STATE = -1$/;"	v
FOLDED_STATE	widgets/numberBar.py	/^FOLDED_STATE = 1$/;"	v
FOLDING_PATTERN	widgets/foldArea.py	/^FOLDING_PATTERN = "\\\\s*(def|class|with|if|else|elif|for|while|async).*:"$/;"	v
F_bool	config.json	/^        "F_bool": {$/;"	o	object:files.python.highlighting
F_bool	config1.json	/^        "F_bool": {$/;"	o	object:files.python.highlighting
F_bool	config2.json	/^        "F_bool": {$/;"	o	object:files.python.highlighting
FoldArea	widgets/foldArea.py	/^class FoldArea(QWidget):$/;"	c
GenericMessage	widgets/Messagebox.py	/^class GenericMessage(QWidget):$/;"	c
GetHelp	widgets/Messagebox.py	/^class GetHelp(QWidget):$/;"	c
HighlightColor	config.json	/^    "HighlightColor": "#4DD2FF",$/;"	s	object:editor
HighlightColor	config1.json	/^    "HighlightColor": "#353535",$/;"	s	object:editor
HighlightColor	config2.json	/^    "HighlightColor": "#4DD2FF",$/;"	s	object:editor
HighlightedTextColor	config.json	/^    "HighlightedTextColor": "#000000",$/;"	s	object:editor
HighlightedTextColor	config1.json	/^    "HighlightedTextColor": "#000000",$/;"	s	object:editor
HighlightedTextColor	config2.json	/^    "HighlightedTextColor": "#000000",$/;"	s	object:editor
IPythonWidget	widgets/IPythonWidget.py	/^class IPythonWidget(RichJupyterWidget):$/;"	c
Image	widgets/Image.py	/^class Image(QWidget):$/;"	c
LOCATION	utils/config.py	/^LOCATION = os.path.dirname(os.path.dirname(os.path.abspath(__file__))) + "\/"$/;"	v
LineEdit	widgets/Messagebox.py	/^class LineEdit(QLineEdit):$/;"	c
Main	main.py	/^class Main(QMainWindow):$/;"	c
MessageBox	widgets/Messagebox.py	/^class MessageBox(QWidget):$/;"	c
N_bool	config.json	/^        "N_bool": {$/;"	o	object:files.python.highlighting
N_bool	config1.json	/^        "N_bool": {$/;"	o	object:files.python.highlighting
N_bool	config2.json	/^        "N_bool": {$/;"	o	object:files.python.highlighting
NewProject	widgets/Messagebox.py	/^class NewProject(QWidget):$/;"	c
NoMatch	widgets/Messagebox.py	/^class NoMatch(QWidget):$/;"	c
NumberBar	widgets/numberBar.py	/^class NumberBar(QWidget):$/;"	c
NumberBarBox	config.json	/^    "NumberBarBox": true,$/;"	b	object:editor
NumberBarBox	config1.json	/^    "NumberBarBox": false,$/;"	b	object:editor
NumberBarBox	config2.json	/^    "NumberBarBox": false,$/;"	b	object:editor
OpenFile	widgets/OpenFile.py	/^class OpenFile(QThread):$/;"	c
OutputTextEdit	widgets/Terminal.py	/^class OutputTextEdit(QPlainTextEdit):$/;"	c
PlainTextEdit	widgets/Terminal.py	/^class PlainTextEdit(QPlainTextEdit):$/;"	c
PyHighlighter	widgets/Pythonhighlighter.py	/^class PyHighlighter(QSyntaxHighlighter):$/;"	c
PythonLexer	widgets/TextEditor.py	/^class PythonLexer(QsciLexerPython):$/;"	c
QLineNumberArea	widgets/Editor.py	/^class QLineNumberArea(QWidget):$/;"	c
Qclass	config.json	/^        "Qclass": {$/;"	o	object:files.python.highlighting
Qclass	config1.json	/^        "Qclass": {$/;"	o	object:files.python.highlighting
Qclass	config2.json	/^        "Qclass": {$/;"	o	object:files.python.highlighting
SaveFile	widgets/SaveFile.py	/^class SaveFile(QThread):$/;"	c
StatusLabel	widgets/Label.py	/^class StatusLabel(QLabel):$/;"	c
SyntaxHighlighter	widgets/Pythonhighlighter.py	/^class SyntaxHighlighter(QObject):$/;"	c
T_bool	config.json	/^        "T_bool": {$/;"	o	object:files.python.highlighting
T_bool	config1.json	/^        "T_bool": {$/;"	o	object:files.python.highlighting
T_bool	config2.json	/^        "T_bool": {$/;"	o	object:files.python.highlighting
TabWidth	config.json	/^    "TabWidth": 38,$/;"	n	object:editor
TabWidth	config1.json	/^    "TabWidth": 38,$/;"	n	object:editor
TabWidth	config2.json	/^    "TabWidth": 38,$/;"	n	object:editor
Tabs	widgets/Tabs.py	/^class Tabs(QWidget):$/;"	c
Terminal	widgets/Terminal.py	/^class Terminal(QWidget):$/;"	c
ToolTipBase	config.json	/^    "ToolTipBase": "#FFFFFF",$/;"	s	object:editor
ToolTipBase	config1.json	/^    "ToolTipBase": "#212121",$/;"	s	object:editor
ToolTipBase	config2.json	/^    "ToolTipBase": "#FFFFFF",$/;"	s	object:editor
ToolTipFont	config.json	/^    "ToolTipFont": "Monaco",$/;"	s	object:editor
ToolTipFont	config1.json	/^    "ToolTipFont": "Monaco",$/;"	s	object:editor
ToolTipFont	config2.json	/^    "ToolTipFont": "Monaco",$/;"	s	object:editor
ToolTipFontSize	config.json	/^    "ToolTipFontSize": 15,$/;"	n	object:editor
ToolTipFontSize	config1.json	/^    "ToolTipFontSize": 15,$/;"	n	object:editor
ToolTipFontSize	config2.json	/^    "ToolTipFontSize": 15,$/;"	n	object:editor
ToolTipText	config.json	/^    "ToolTipText": "#FFFFFF",$/;"	s	object:editor
ToolTipText	config1.json	/^    "ToolTipText": "#FFFFFF",$/;"	s	object:editor
ToolTipText	config2.json	/^    "ToolTipText": "#FFFFFF",$/;"	s	object:editor
UNFOLDED_STATE	widgets/foldArea.py	/^UNFOLDED_STATE = 0$/;"	v
UNFOLDED_STATE	widgets/numberBar.py	/^UNFOLDED_STATE = 0$/;"	v
UnfocusedHighlightColor	config.json	/^    "UnfocusedHighlightColor": "#FFFFFF",$/;"	s	object:editor
UnfocusedHighlightColor	config1.json	/^    "UnfocusedHighlightColor": "#FFFFFF",$/;"	s	object:editor
UnfocusedHighlightColor	config2.json	/^    "UnfocusedHighlightColor": "#FFFFFF",$/;"	s	object:editor
UpdateThread	main.py	/^class UpdateThread(QThread):$/;"	c
VERSION	__init__.py	/^VERSION = (1, 0, 0)$/;"	v
__init_	main.py	/^    def __init_(self):$/;"	m	class:UpdateThread	file:
__init__	main.py	/^    def __init__(self, app, palette, editor, parent=None):$/;"	m	class:Main
__init__	utils/find_utility.py	/^    def __init__(self):$/;"	m	class:DocumentSearch
__init__	utils/find_utility.py	/^    def __init__(self, file):$/;"	m	class:grabFiles
__init__	widgets/Browser.py	/^        def __init__(self, url):$/;"	m	class:Browser
__init__	widgets/Content.py	/^    def __init__($/;"	m	class:Content
__init__	widgets/Directory.py	/^    def __init__(self, callback, app=None, palette=None):$/;"	m	class:Directory
__init__	widgets/Editor.py	/^    def __init__(self, editor):$/;"	m	class:QLineNumberArea
__init__	widgets/Editor.py	/^    def __init__(self, myKeywords=None, parent=None):$/;"	m	class:Completer
__init__	widgets/Editor.py	/^    def __init__(self, parent, isReadOnly=False):$/;"	m	class:Editor
__init__	widgets/Events.py	/^    def __init__(self):$/;"	m	class:DeadCodeCheker
__init__	widgets/Events.py	/^    def __init__(self, text=None, file_name=None):$/;"	m	class:Events
__init__	widgets/IPythonWidget.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:IPythonWidget
__init__	widgets/Image.py	/^    def __init__(self, fileName, baseName):$/;"	m	class:Image
__init__	widgets/Label.py	/^    def __init__(self, text: str, font: QFont):$/;"	m	class:StatusLabel
__init__	widgets/Messagebox.py	/^    def __init__(self):$/;"	m	class:LineEdit
__init__	widgets/Messagebox.py	/^    def __init__(self, parent, error=None, helpword=None, index=choiceIndex):$/;"	m	class:MessageBox
__init__	widgets/Messagebox.py	/^    def __init__(self, parent, helpword):$/;"	m	class:GetHelp
__init__	widgets/Messagebox.py	/^    def __init__(self, parent=None):$/;"	m	class:NewProject
__init__	widgets/Messagebox.py	/^    def __init__(self, text):$/;"	m	class:GenericMessage
__init__	widgets/Messagebox.py	/^    def __init__(self, word):$/;"	m	class:NoMatch
__init__	widgets/OpenFile.py	/^    def __init__(self, parent=None):$/;"	m	class:OpenFile
__init__	widgets/Pythonhighlighter.py	/^    def __init__(self, editor, index=choiceIndex):$/;"	m	class:SyntaxHighlighter
__init__	widgets/Pythonhighlighter.py	/^    def __init__(self, parent=None, editor=None, index=choiceIndex, *args):$/;"	m	class:PyHighlighter
__init__	widgets/SaveFile.py	/^    def __init__(self, parent):$/;"	m	class:SaveFile
__init__	widgets/Tabs.py	/^    def __init__(self, callback, app, palette, parent=None):$/;"	m	class:Tabs
__init__	widgets/Terminal.py	/^    def __init__(self, parent):$/;"	m	class:OutputTextEdit
__init__	widgets/Terminal.py	/^    def __init__(self, parent, movable=False):$/;"	m	class:Terminal
__init__	widgets/Terminal.py	/^    def __init__(self, parent=None):$/;"	m	class:Console
__init__	widgets/Terminal.py	/^    def __init__(self, parent=None, movable=False):$/;"	m	class:PlainTextEdit
__init__	widgets/Terminal.py	/^    def __init__(self, parent=None, user_name=None, host_name=None, cwd=None):$/;"	m	class:name_highlighter
__init__	widgets/TextEditor.py	/^    def __init__(self):$/;"	m	class:PythonLexer
__init__	widgets/TextEditor.py	/^    def __init__(self, parent=None):$/;"	m	class:Editor
__init__	widgets/foldArea.py	/^    def __init__(self, editor: Editor):$/;"	m	class:FoldArea
__init__	widgets/numberBar.py	/^    def __init__(self, editor: Editor):$/;"	m	class:NumberBar
__version__	__init__.py	/^__version__ = ".".join(map(str, VERSION))$/;"	v
_closeAnyway	widgets/Messagebox.py	/^        def _closeAnyway():$/;"	f	member:MessageBox.saveMaybe	file:
_exit	widgets/Messagebox.py	/^        def _exit():$/;"	f	member:MessageBox.success	file:
_hide	widgets/Messagebox.py	/^        def _hide():$/;"	f	member:MessageBox.saveMaybe	file:
_lol	utils/check_update.py	/^    def _lol():$/;"	f	function:local_version	file:
add	widgets/Terminal.py	/^    def add(self):$/;"	m	class:Console
add	widgets/Terminal.py	/^    def add(self):$/;"	m	class:Terminal
addTab	main.py	/^    def addTab(self, state, tab, basename, index_to_remove):$/;"	m	class:Main
add_args	widgets/Events.py	/^    def add_args(self, text):$/;"	m	class:DeadCodeCheker
add_args	widgets/OpenFile.py	/^    def add_args(self, filename, file_exists):$/;"	m	class:OpenFile
add_args	widgets/SaveFile.py	/^    def add_args(self, tab):$/;"	m	class:SaveFile
added	widgets/Terminal.py	/^    def added(self):$/;"	m	class:Console
added	widgets/Terminal.py	/^    def added(self):$/;"	m	class:Terminal
afterTagGeneration	main.py	/^    def afterTagGeneration(self, appDir: str) -> None:$/;"	m	class:Main
alternateBase	config.json	/^    "alternateBase": "#FFFFFF",$/;"	s	object:editor
alternateBase	config1.json	/^    "alternateBase": "#FFFFFF",$/;"	s	object:editor
alternateBase	config2.json	/^    "alternateBase": "#FFFFFF",$/;"	s	object:editor
assignLines	widgets/Content.py	/^    def assignLines(self, array: list) -> None:$/;"	m	class:Content
attemptToWriteDataIntoProcess	widgets/Terminal.py	/^    def attemptToWriteDataIntoProcess(self, input: str) -> None:$/;"	m	class:Console
autoSaveEnabled	config1.json	/^    "autoSaveEnabled": false,$/;"	b	object:editor
autoSaveStep	config1.json	/^    "autoSaveStep": 5$/;"	n	object:editor
bold	config.json	/^          "bold": true$/;"	b	object:files.c.highlighting.class
bold	config.json	/^          "bold": true$/;"	b	object:files.c.highlighting.keyword
bold	config.json	/^          "bold": true$/;"	b	object:files.python.highlighting.class
bold	config.json	/^          "bold": true,$/;"	b	object:files.python.highlighting.keyword
bold	config1.json	/^          "bold": false$/;"	b	object:files.python.highlighting.class
bold	config1.json	/^          "bold": true$/;"	b	object:files.c.highlighting.class
bold	config1.json	/^          "bold": true$/;"	b	object:files.c.highlighting.keyword
bold	config1.json	/^          "bold": true,$/;"	b	object:files.python.highlighting.keyword
bold	config2.json	/^          "bold": false$/;"	b	object:files.python.highlighting.class
bold	config2.json	/^          "bold": true$/;"	b	object:files.c.highlighting.class
bold	config2.json	/^          "bold": true$/;"	b	object:files.c.highlighting.keyword
bold	config2.json	/^          "bold": true,$/;"	b	object:files.python.highlighting.keyword
buttonColor	config.json	/^    "buttonColor": "#353535",$/;"	s	object:editor
buttonColor	config1.json	/^    "buttonColor": "#353535",$/;"	s	object:editor
buttonColor	config2.json	/^    "buttonColor": "#353535",$/;"	s	object:editor
buttonTextColor	config.json	/^    "buttonTextColor": "#FFFFFF",$/;"	s	object:editor
buttonTextColor	config1.json	/^    "buttonTextColor": "#FFFFFF",$/;"	s	object:editor
buttonTextColor	config2.json	/^    "buttonTextColor": "#FFFFFF",$/;"	s	object:editor
c	config.json	/^    }, "c": {$/;"	o	object:files
c	config1.json	/^    }, "c": {$/;"	o	object:files
c	config2.json	/^    }, "c": {$/;"	o	object:files
c_highlighter	widgets/TextEditor.py	/^    def c_highlighter(self):$/;"	m	class:Editor
calculate_target	widgets/Pythonhighlighter.py	/^    def calculate_target(self) -> int:$/;"	m	class:SyntaxHighlighter
center	widgets/Messagebox.py	/^    def center(self):$/;"	m	class:MessageBox
center	widgets/Terminal.py	/^    def center(self):$/;"	m	class:PlainTextEdit
center	widgets/Terminal.py	/^    def center(self):$/;"	m	class:Terminal
changeCompletion	widgets/Editor.py	/^    def changeCompletion(self, completion):$/;"	m	class:Completer
changeSaved	widgets/Content.py	/^    def changeSaved(self):$/;"	m	class:Content
change_col	widgets/Content.py	/^    def change_col(self):$/;"	m	class:Content
change_col	widgets/TextEditor.py	/^    def change_col(self, line, column):  # Responsible for changing the column bar.$/;"	m	class:Editor
change_cursor	widgets/Messagebox.py	/^    def change_cursor(self):$/;"	m	class:NewProject
change_offset	widgets/Content.py	/^    def change_offset(self, amount: int) -> None:$/;"	m	class:Content
change_offset	widgets/OpenFile.py	/^    def change_offset(self, offset):$/;"	m	class:OpenFile
change_read_amount	widgets/Content.py	/^    def change_read_amount(self, amount: int) -> None:$/;"	m	class:Content
change_read_amount	widgets/OpenFile.py	/^    def change_read_amount(self, amount: int) -> None:$/;"	m	class:OpenFile
check	widgets/Editor.py	/^    def check(self):$/;"	m	class:Editor
checkIfCanComplete	widgets/Content.py	/^    def checkIfCanComplete(self):$/;"	m	class:Content
check_func	widgets/Editor.py	/^    def check_func(self, word, clicked=False):$/;"	m	class:Editor
check_if_error	widgets/TextEditor.py	/^    def check_if_error(self, word):$/;"	m	class:Editor
check_if_func	widgets/TextEditor.py	/^    def check_if_func(self, word):  # Checks if a word is a built in function$/;"	m	class:Editor
check_if_valid	widgets/Messagebox.py	/^    def check_if_valid(self):$/;"	m	class:NewProject
check_lines	widgets/TextEditor.py	/^    def check_lines(self):$/;"	m	class:Editor
check_updates	main.py	/^    def check_updates(self, text):$/;"	m	class:Main
choiceIndex	main.py	/^    choiceIndex = int(choice.read())$/;"	v
choiceIndex	widgets/Content.py	/^    choiceIndex = int(choice.read())$/;"	v
choiceIndex	widgets/Directory.py	/^    choiceIndex = int(choice.read())$/;"	v
choiceIndex	widgets/Editor.py	/^    choiceIndex = int(choice.read())$/;"	v
choiceIndex	widgets/Messagebox.py	/^    choiceIndex = int(choice.read())$/;"	v
choiceIndex	widgets/Pythonhighlighter.py	/^    choiceIndex = int(choice.read())$/;"	v
choiceIndex	widgets/Tabs.py	/^    choiceIndex = int(choice.read())$/;"	v
choiceIndex	widgets/Terminal.py	/^    choiceIndex = int(choice.read())$/;"	v
choiceIndex	widgets/TextEditor.py	/^    choiceIndex = int(choice.read())$/;"	v
choose_python	main.py	/^    def choose_python(self):$/;"	m	class:Main
class	config.json	/^        "class": {$/;"	o	object:files.c.highlighting
class	config.json	/^        "class": {$/;"	o	object:files.python.highlighting
class	config1.json	/^        "class": {$/;"	o	object:files.c.highlighting
class	config1.json	/^        "class": {$/;"	o	object:files.python.highlighting
class	config2.json	/^        "class": {$/;"	o	object:files.c.highlighting
class	config2.json	/^        "class": {$/;"	o	object:files.python.highlighting
cleanOpen	main.py	/^    def cleanOpen(self, filename, pic_opened=False, searchCommand=None):$/;"	m	class:Main
clear	widgets/IPythonWidget.py	/^    def clear(self):$/;"	m	class:IPythonWidget
closeEvent	main.py	/^    def closeEvent(self, QCloseEvent):$/;"	m	class:Main
closeTab	widgets/Tabs.py	/^    def closeTab(self, index):$/;"	m	class:Tabs
closeTabShortcut	config.json	/^    "closeTabShortcut": "Ctrl+W",$/;"	s	object:editor
closeTabShortcut	config1.json	/^    "closeTabShortcut": "Ctrl+W",$/;"	s	object:editor
closeTabShortcut	config2.json	/^    "closeTabShortcut": "Ctrl+W",$/;"	s	object:editor
closeTabShortcut	widgets/Tabs.py	/^    def closeTabShortcut(self):$/;"	m	class:Tabs
code_info	widgets/Content.py	/^    def code_info(self, data):$/;"	m	class:Content
color	config.json	/^          "color": "#0099FF"$/;"	s	object:files.python.highlighting.keyword
color	config.json	/^          "color": "#0099FF",$/;"	s	object:files.c.highlighting.keyword
color	config.json	/^          "color": "#039135"$/;"	s	object:files.c.highlighting.multiLineComment
color	config.json	/^          "color": "#039135"$/;"	s	object:files.python.highlighting.multiLineComment
color	config.json	/^          "color": "#0f9b0f"$/;"	s	object:files.python.highlighting.T_bool
color	config.json	/^          "color": "#330000",$/;"	s	object:files.c.highlighting.class
color	config.json	/^          "color": "#548A9C",$/;"	s	object:files.python.highlighting.class
color	config.json	/^          "color": "#63ff00"$/;"	s	object:files.c.highlighting.quotation
color	config.json	/^          "color": "#63ff00"$/;"	s	object:files.python.highlighting.quotation
color	config.json	/^          "color": "#63ff00"$/;"	s	object:files.python.highlighting.quotation2
color	config.json	/^          "color": "#6B6E6C"$/;"	s	object:files.c.highlighting.singleLineComment
color	config.json	/^          "color": "#6B6E6C"$/;"	s	object:files.python.highlighting.singleLineComment
color	config.json	/^          "color": "#ADD4FF"$/;"	s	object:files.c.highlighting.int
color	config.json	/^          "color": "#ADD4FF"$/;"	s	object:files.python.highlighting.int
color	config.json	/^          "color": "#FF00E7"$/;"	s	object:files.c.highlighting.decorator
color	config.json	/^          "color": "#FF00E7"$/;"	s	object:files.python.highlighting.decorator
color	config.json	/^          "color": "#FF6666"$/;"	s	object:files.c.highlighting.magic
color	config.json	/^          "color": "#FF6666",$/;"	s	object:files.python.highlighting.magic
color	config.json	/^          "color": "#FF9500",$/;"	s	object:files.c.highlighting.function
color	config.json	/^          "color": "#FF9500",$/;"	s	object:files.python.highlighting.function
color	config.json	/^          "color": "#ef3b36"$/;"	s	object:files.python.highlighting.self
color	config.json	/^          "color": "#ef473a"$/;"	s	object:files.python.highlighting.F_bool
color	config.json	/^          "color": "#f5af19"$/;"	s	object:files.python.highlighting.Qclass
color	config.json	/^          "color": "#fceabb"$/;"	s	object:files.python.highlighting.N_bool
color	config1.json	/^          "color": "#0099FF",$/;"	s	object:files.c.highlighting.keyword
color	config1.json	/^          "color": "#039135"$/;"	s	object:files.c.highlighting.multiLineComment
color	config1.json	/^          "color": "#039135"$/;"	s	object:files.python.highlighting.multiLineComment
color	config1.json	/^          "color": "#0f9b0f"$/;"	s	object:files.python.highlighting.T_bool
color	config1.json	/^          "color": "#1cb5e0"$/;"	s	object:files.python.highlighting.self
color	config1.json	/^          "color": "#330000",$/;"	s	object:files.c.highlighting.class
color	config1.json	/^          "color": "#63ff00"$/;"	s	object:files.c.highlighting.quotation
color	config1.json	/^          "color": "#63ff00"$/;"	s	object:files.python.highlighting.quotation
color	config1.json	/^          "color": "#63ff00"$/;"	s	object:files.python.highlighting.quotation2
color	config1.json	/^          "color": "#6B6E6C"$/;"	s	object:files.c.highlighting.singleLineComment
color	config1.json	/^          "color": "#6B6E6C"$/;"	s	object:files.python.highlighting.singleLineComment
color	config1.json	/^          "color": "#74F6C3",$/;"	s	object:files.python.highlighting.class
color	config1.json	/^          "color": "#ADD4FF"$/;"	s	object:files.c.highlighting.int
color	config1.json	/^          "color": "#ADD4FF"$/;"	s	object:files.python.highlighting.int
color	config1.json	/^          "color": "#F6DC74"$/;"	s	object:files.python.highlighting.keyword
color	config1.json	/^          "color": "#FF00E7"$/;"	s	object:files.c.highlighting.decorator
color	config1.json	/^          "color": "#FF00E7"$/;"	s	object:files.python.highlighting.decorator
color	config1.json	/^          "color": "#FF6666"$/;"	s	object:files.c.highlighting.magic
color	config1.json	/^          "color": "#FF6666",$/;"	s	object:files.python.highlighting.function
color	config1.json	/^          "color": "#FF6666",$/;"	s	object:files.python.highlighting.magic
color	config1.json	/^          "color": "#FF9500",$/;"	s	object:files.c.highlighting.function
color	config1.json	/^          "color": "#ef473a"$/;"	s	object:files.python.highlighting.F_bool
color	config1.json	/^          "color": "#f5af19"$/;"	s	object:files.python.highlighting.Qclass
color	config1.json	/^          "color": "#fceabb"$/;"	s	object:files.python.highlighting.N_bool
color	config2.json	/^          "color": "#0099FF"$/;"	s	object:files.python.highlighting.keyword
color	config2.json	/^          "color": "#0099FF",$/;"	s	object:files.c.highlighting.keyword
color	config2.json	/^          "color": "#039135"$/;"	s	object:files.c.highlighting.multiLineComment
color	config2.json	/^          "color": "#039135"$/;"	s	object:files.python.highlighting.multiLineComment
color	config2.json	/^          "color": "#0f9b0f"$/;"	s	object:files.python.highlighting.T_bool
color	config2.json	/^          "color": "#330000",$/;"	s	object:files.c.highlighting.class
color	config2.json	/^          "color": "#548A9C",$/;"	s	object:files.python.highlighting.class
color	config2.json	/^          "color": "#63ff00"$/;"	s	object:files.c.highlighting.quotation
color	config2.json	/^          "color": "#63ff00"$/;"	s	object:files.python.highlighting.quotation
color	config2.json	/^          "color": "#63ff00"$/;"	s	object:files.python.highlighting.quotation2
color	config2.json	/^          "color": "#6B6E6C"$/;"	s	object:files.c.highlighting.singleLineComment
color	config2.json	/^          "color": "#6B6E6C"$/;"	s	object:files.python.highlighting.singleLineComment
color	config2.json	/^          "color": "#ADD4FF"$/;"	s	object:files.c.highlighting.int
color	config2.json	/^          "color": "#ADD4FF"$/;"	s	object:files.python.highlighting.int
color	config2.json	/^          "color": "#FF00E7"$/;"	s	object:files.c.highlighting.decorator
color	config2.json	/^          "color": "#FF00E7"$/;"	s	object:files.python.highlighting.decorator
color	config2.json	/^          "color": "#FF6666"$/;"	s	object:files.c.highlighting.magic
color	config2.json	/^          "color": "#FF6666",$/;"	s	object:files.python.highlighting.function
color	config2.json	/^          "color": "#FF6666",$/;"	s	object:files.python.highlighting.magic
color	config2.json	/^          "color": "#FF9500",$/;"	s	object:files.c.highlighting.function
color	config2.json	/^          "color": "#ef3b36"$/;"	s	object:files.python.highlighting.self
color	config2.json	/^          "color": "#ef473a"$/;"	s	object:files.python.highlighting.F_bool
color	config2.json	/^          "color": "#f5af19"$/;"	s	object:files.python.highlighting.Qclass
color	config2.json	/^          "color": "#fceabb"$/;"	s	object:files.python.highlighting.N_bool
commandSignal	widgets/Terminal.py	/^    commandSignal = pyqtSignal(str)$/;"	v	class:PlainTextEdit
commandZPressed	widgets/Terminal.py	/^    commandZPressed = pyqtSignal(str)$/;"	v	class:PlainTextEdit
config0	widgets/Directory.py	/^config0 = config_reader(0)$/;"	v
config0	widgets/Pythonhighlighter.py	/^config0 = config_reader(0)$/;"	v
config1	widgets/Directory.py	/^config1 = config_reader(1)$/;"	v
config1	widgets/Pythonhighlighter.py	/^config1 = config_reader(1)$/;"	v
config2	widgets/Directory.py	/^config2 = config_reader(2)$/;"	v
config2	widgets/Pythonhighlighter.py	/^config2 = config_reader(2)$/;"	v
config_choice	utils/config.py	/^def config_choice(file):$/;"	f
config_reader	utils/config.py	/^def config_reader(theme):$/;"	f
configs	main.py	/^configs = [config_reader(0), config_reader(1), config_reader(2)]$/;"	v
configs	widgets/Content.py	/^configs = [config_reader(0), config_reader(1), config_reader(2)]$/;"	v
configs	widgets/Editor.py	/^configs = [config_reader(0), config_reader(1), config_reader(2)]$/;"	v
configs	widgets/Messagebox.py	/^configs = [config_reader(0), config_reader(1), config_reader(2)]$/;"	v
configs	widgets/Tabs.py	/^configs = [config_reader(0), config_reader(1), config_reader(2)]$/;"	v
configs	widgets/Terminal.py	/^configs = [config_reader(0), config_reader(1), config_reader(2)]$/;"	v
configs	widgets/TextEditor.py	/^configs = [config_reader(0), config_reader(1), config_reader(2)]$/;"	v
confirmation	widgets/Messagebox.py	/^    def confirmation(self, index):$/;"	m	class:MessageBox
contextMenuEvent	widgets/Editor.py	/^    def contextMenuEvent(self, event):$/;"	m	class:Editor
createFolder	widgets/Messagebox.py	/^        def createFolder():$/;"	f	member:MessageBox.newProject	file:
create_project	widgets/Messagebox.py	/^    def create_project(self):$/;"	m	class:NewProject
currentTab	widgets/Tabs.py	/^    def currentTab(self):$/;"	m	class:Tabs
data	widgets/SaveFile.py	/^    data = pyqtSignal(str)$/;"	v	class:SaveFile
dataSignal	widgets/OpenFile.py	/^    dataSignal = pyqtSignal(str)$/;"	v	class:OpenFile
decide	widgets/Content.py	/^    def decide(self, array):  # Right now this function is not used anywhere$/;"	m	class:Content
decorator	config.json	/^        "decorator": {$/;"	o	object:files.c.highlighting
decorator	config.json	/^        "decorator": {$/;"	o	object:files.python.highlighting
decorator	config1.json	/^        "decorator": {$/;"	o	object:files.c.highlighting
decorator	config1.json	/^        "decorator": {$/;"	o	object:files.python.highlighting
decorator	config2.json	/^        "decorator": {$/;"	o	object:files.c.highlighting
decorator	config2.json	/^        "decorator": {$/;"	o	object:files.python.highlighting
delete	widgets/Messagebox.py	/^    def delete(self):$/;"	m	class:MessageBox
deleteFile	widgets/Directory.py	/^    def deleteFile(self):$/;"	m	class:Directory
directoryFont	config.json	/^    "directoryFont": "Inconsolata",$/;"	s	object:editor
directoryFont	config1.json	/^    "directoryFont": "Monaco",$/;"	s	object:editor
directoryFont	config2.json	/^    "directoryFont": "Inconsolata",$/;"	s	object:editor
directoryFontSize	config.json	/^    "directoryFontSize": 10,$/;"	n	object:editor
directoryFontSize	config1.json	/^    "directoryFontSize": 14,$/;"	n	object:editor
directoryFontSize	config2.json	/^    "directoryFontSize": 10,$/;"	n	object:editor
doneSignal	widgets/Events.py	/^    doneSignal = pyqtSignal(bool)$/;"	v	class:DeadCodeCheker
dont	widgets/Messagebox.py	/^    def dont(self):$/;"	m	class:MessageBox
editor	config.json	/^  "editor": {$/;"	o
editor	config1.json	/^  "editor": {$/;"	o
editor	config2.json	/^  "editor": {$/;"	o
editor	widgets/Content.py	/^editor = configs[choiceIndex]["editor"]$/;"	v
editor	widgets/Directory.py	/^    editor = config0["editor"]$/;"	v
editor	widgets/Directory.py	/^    editor = config1["editor"]$/;"	v
editor	widgets/Directory.py	/^    editor = config2["editor"]$/;"	v
editor	widgets/Editor.py	/^editor = configs[choiceIndex]["editor"]$/;"	v
editor	widgets/Messagebox.py	/^editor = configs[choiceIndex]["editor"]$/;"	v
editor	widgets/Pythonhighlighter.py	/^    editor = config0["editor"]$/;"	v
editor	widgets/Pythonhighlighter.py	/^    editor = config1["editor"]$/;"	v
editor	widgets/Pythonhighlighter.py	/^    editor = config2["editor"]$/;"	v
editor	widgets/Tabs.py	/^editor = configs[choiceIndex]["editor"]$/;"	v
editor	widgets/Terminal.py	/^editor = configs[choiceIndex]["editor"]$/;"	v
editor	widgets/TextEditor.py	/^editor = configs[choiceIndex]["editor"]$/;"	v
editorColor	config.json	/^    "editorColor": "#303030",$/;"	s	object:editor
editorColor	config1.json	/^    "editorColor": "#212121",$/;"	s	object:editor
editorColor	config2.json	/^    "editorColor": "#303030",$/;"	s	object:editor
editorFont	config.json	/^    "editorFont": "Iosevka",$/;"	s	object:editor
editorFont	config1.json	/^    "editorFont": "Monaco",$/;"	s	object:editor
editorFont	config2.json	/^    "editorFont": "Iosevka",$/;"	s	object:editor
editorFontSize	config.json	/^    "editorFontSize": 12,$/;"	n	object:editor
editorFontSize	config1.json	/^    "editorFontSize": 15,$/;"	n	object:editor
editorFontSize	config2.json	/^    "editorFontSize": 9,$/;"	n	object:editor
editorText	config.json	/^    "editorText": "#e3e6fc",$/;"	s	object:editor
editorText	config1.json	/^    "editorText": "#e3e6fc",$/;"	s	object:editor
editorText	config2.json	/^    "editorText": "#e3e6fc",$/;"	s	object:editor
errorList	utils/completer_utility.py	/^errorList = [$/;"	v
errorMessages	config.json	/^    "errorMessages": false,$/;"	b	object:editor
errorMessages	config1.json	/^    "errorMessages": true,$/;"	b	object:editor
errorMessages	config2.json	/^    "errorMessages": true,$/;"	b	object:editor
errorSignal	widgets/Terminal.py	/^    errorSignal = pyqtSignal(str)$/;"	v	class:Console
errorSignal	widgets/Terminal.py	/^    errorSignal = pyqtSignal(str)$/;"	v	class:Terminal
execute_command	widgets/IPythonWidget.py	/^    def execute_command(self, command):$/;"	m	class:IPythonWidget
execute_file	main.py	/^    def execute_file(self):$/;"	m	class:Main
exit	main.py	/^    def exit(self):$/;"	m	class:Main
extensions	config.json	/^      "extensions": "c",$/;"	s	object:files.c
extensions	config.json	/^      "extensions": "py",$/;"	s	object:files.python
extensions	config1.json	/^      "extensions": "c",$/;"	s	object:files.c
extensions	config1.json	/^      "extensions": "py",$/;"	s	object:files.python
extensions	config2.json	/^      "extensions": "c",$/;"	s	object:files.c
extensions	config2.json	/^      "extensions": "py",$/;"	s	object:files.python
fileNameChange	main.py	/^    def fileNameChange(self):$/;"	m	class:Main
fileSignal	utils/find_utility.py	/^    fileSignal = pyqtSignal(str)$/;"	v	class:grabFiles
files	config.json	/^  "files": {$/;"	o
files	config1.json	/^  "files": {$/;"	o
files	config2.json	/^  "files": {$/;"	o
findDocument	main.py	/^    def findDocument(self):$/;"	m	class:Main
findDocumentFunc	main.py	/^    def findDocumentFunc(self):$/;"	m	class:Main
find_all	utils/find_utility.py	/^def find_all(a_str, sub):$/;"	f
finishedProcess	widgets/Terminal.py	/^    def finishedProcess(self, exitCode: int, exitStatus: QProcess.ExitStatus):$/;"	m	class:Console
focusInEvent	widgets/Content.py	/^    def focusInEvent(self, event):$/;"	m	class:Content
focusInEvent	widgets/Directory.py	/^    def focusInEvent(self, event):$/;"	m	class:Directory
focusOutEvent	widgets/Directory.py	/^    def focusOutEvent(self, event):$/;"	m	class:Directory
fold	widgets/foldArea.py	/^    def fold(self, block: QTextBlock):$/;"	m	class:FoldArea
funcList	utils/completer_utility.py	/^funcList = [$/;"	v
function	config.json	/^        "function": {$/;"	o	object:files.c.highlighting
function	config.json	/^        "function": {$/;"	o	object:files.python.highlighting
function	config1.json	/^        "function": {$/;"	o	object:files.c.highlighting
function	config1.json	/^        "function": {$/;"	o	object:files.python.highlighting
function	config2.json	/^        "function": {$/;"	o	object:files.c.highlighting
function	config2.json	/^        "function": {$/;"	o	object:files.python.highlighting
generalFont	config.json	/^    "generalFont": "Monaco",$/;"	s	object:editor
generalFont	config1.json	/^    "generalFont": "Monaco",$/;"	s	object:editor
generalFont	config2.json	/^    "generalFont": "Monaco",$/;"	s	object:editor
generalFontSize	config.json	/^    "generalFontSize": 14,$/;"	n	object:editor
generalFontSize	config1.json	/^    "generalFontSize": 14,$/;"	n	object:editor
generalFontSize	config2.json	/^    "generalFontSize": 14,$/;"	n	object:editor
generateTagFile	main.py	/^    def generateTagFile(self, directoryLocation: str) -> bool:$/;"	m	class:Main
getAllOpenTabsFunc	widgets/Tabs.py	/^    def getAllOpenTabsFunc(self):$/;"	m	class:Tabs
getBlockUnderCursor	widgets/Editor.py	/^    def getBlockUnderCursor(self, event: QMouseEvent) -> QTextBlock:$/;"	m	class:Editor
getBlockUnderCursor	widgets/foldArea.py	/^    def getBlockUnderCursor(self, event: QMouseEvent) -> QTextBlock:$/;"	m	class:FoldArea
getBlockUnderCursor	widgets/numberBar.py	/^    def getBlockUnderCursor(self, event: QMouseEvent) -> QTextBlock:$/;"	m	class:NumberBar
getFoldableBlocks	widgets/Editor.py	/^    def getFoldableBlocks(self, block: QTextBlock) -> list:$/;"	m	class:Editor
getHelp	widgets/Messagebox.py	/^    def getHelp(self, paren):$/;"	m	class:MessageBox
getTextCursor	widgets/Content.py	/^    def getTextCursor(self):$/;"	m	class:Content
getTextCursor	widgets/Editor.py	/^    def getTextCursor(self):$/;"	m	class:Editor
get_dir	widgets/Messagebox.py	/^    def get_dir(self):$/;"	m	class:NewProject
get_last_file	utils/lastOpenFile.py	/^def get_last_file():$/;"	f
get_last_file	utils/last_open_file.py	/^def get_last_file():$/;"	f
get_pydoc_output	widgets/Editor.py	/^    def get_pydoc_output(self):$/;"	m	class:Editor
get_size	widgets/Content.py	/^    def get_size(self, input):$/;"	m	class:Content
gettingHelp	widgets/Messagebox.py	/^    def gettingHelp(self):$/;"	m	class:MessageBox
grabFiles	utils/find_utility.py	/^class grabFiles(QThread):$/;"	c
handle	widgets/Terminal.py	/^    def handle(self, command):$/;"	m	class:Terminal
hello	Untitled_file_7.py	/^def hello():$/;"	f
hideConsole	widgets/Tabs.py	/^    def hideConsole(self):$/;"	m	class:Tabs
hideDirectory	widgets/Tabs.py	/^    def hideDirectory(self):$/;"	m	class:Tabs
hideFileExecuter	widgets/Tabs.py	/^    def hideFileExecuter(self):$/;"	m	class:Tabs
hideTerminalClicked	widgets/Terminal.py	/^    def hideTerminalClicked(self):$/;"	m	class:Console
hideTerminalClicked	widgets/Terminal.py	/^    def hideTerminalClicked(self):$/;"	m	class:Terminal
highlightBlock	widgets/Pythonhighlighter.py	/^    def highlightBlock(self, text):$/;"	m	class:PyHighlighter
highlightBlock	widgets/Terminal.py	/^    def highlightBlock(self, text):$/;"	m	class:name_highlighter
highlightBlocks	widgets/Pythonhighlighter.py	/^    def highlightBlocks(self, justOpened=False):$/;"	m	class:SyntaxHighlighter
highlightCurrentLine	widgets/Editor.py	/^    def highlightCurrentLine(self):$/;"	m	class:Editor
highlightOneBlock	widgets/Pythonhighlighter.py	/^    def highlightOneBlock(self, block):$/;"	m	class:SyntaxHighlighter
highlighting	config.json	/^      "highlighting": {$/;"	o	object:files.c
highlighting	config.json	/^      "highlighting": {$/;"	o	object:files.python
highlighting	config1.json	/^      "highlighting": {$/;"	o	object:files.c
highlighting	config1.json	/^      "highlighting": {$/;"	o	object:files.python
highlighting	config2.json	/^      "highlighting": {$/;"	o	object:files.c
highlighting	config2.json	/^      "highlighting": {$/;"	o	object:files.python
html_highlighter	widgets/TextEditor.py	/^    def html_highlighter(self):$/;"	m	class:Editor
ifFinished	widgets/Terminal.py	/^    def ifFinished(self, exitCode, exitStatus):$/;"	m	class:Console
indentation	config.json	/^      "indentation": 4,$/;"	n	object:files.c
indentation	config.json	/^      "indentation": 4,$/;"	n	object:files.python
indentation	config1.json	/^      "indentation": 4,$/;"	n	object:files.c
indentation	config1.json	/^      "indentation": 4,$/;"	n	object:files.python
indentation	config2.json	/^      "indentation": 4,$/;"	n	object:files.c
indentation	config2.json	/^      "indentation": 4,$/;"	n	object:files.python
infoSignal	widgets/Events.py	/^    infoSignal = pyqtSignal(str)$/;"	v	class:DeadCodeCheker
initUI	main.py	/^    def initUI(self):$/;"	m	class:Main
initUI	utils/find_utility.py	/^    def initUI(self):$/;"	m	class:DocumentSearch
initUI	widgets/Messagebox.py	/^    def initUI(self):$/;"	m	class:MessageBox
initialize	widgets/Content.py	/^    def initialize(self, justOpened=False):$/;"	m	class:Content
insertCompletion	widgets/Content.py	/^    def insertCompletion(self, completion):$/;"	m	class:Content
insertFromMimeData	widgets/Editor.py	/^    def insertFromMimeData(self, source: QMimeData) -> None:$/;"	m	class:Editor
insertText	widgets/Content.py	/^    def insertText(self, text: str) -> None:$/;"	m	class:Content
insertText	widgets/Editor.py	/^    insertText = pyqtSignal(str)$/;"	v	class:Completer
int	config.json	/^        "int": {$/;"	o	object:files.c.highlighting
int	config.json	/^        "int": {$/;"	o	object:files.python.highlighting
int	config1.json	/^        "int": {$/;"	o	object:files.c.highlighting
int	config1.json	/^        "int": {$/;"	o	object:files.python.highlighting
int	config2.json	/^        "int": {$/;"	o	object:files.c.highlighting
int	config2.json	/^        "int": {$/;"	o	object:files.python.highlighting
is_modified	widgets/Editor.py	/^    def is_modified(self):$/;"	m	class:Editor
ispressed	widgets/Terminal.py	/^    def ispressed(self):$/;"	m	class:Console
ispressed	widgets/Terminal.py	/^    def ispressed(self):$/;"	m	class:Terminal
italic	config.json	/^          "italic": true$/;"	b	object:files.c.highlighting.function
italic	config.json	/^          "italic": true$/;"	b	object:files.python.highlighting.function
italic	config.json	/^          "italic": true$/;"	b	object:files.python.highlighting.magic
italic	config1.json	/^          "italic": true$/;"	b	object:files.c.highlighting.function
italic	config1.json	/^          "italic": true$/;"	b	object:files.python.highlighting.function
italic	config1.json	/^          "italic": true$/;"	b	object:files.python.highlighting.magic
italic	config2.json	/^          "italic": true$/;"	b	object:files.c.highlighting.function
italic	config2.json	/^          "italic": true$/;"	b	object:files.python.highlighting.function
italic	config2.json	/^          "italic": true$/;"	b	object:files.python.highlighting.magic
iterate	widgets/Editor.py	/^    def iterate(self):$/;"	m	class:Editor
json_highlighter	widgets/TextEditor.py	/^    def json_highlighter(self):$/;"	m	class:Editor
jumpToDef	main.py	/^    def jumpToDef(self, tagList: list):$/;"	m	class:Main
jumpToDef	widgets/Content.py	/^    def jumpToDef(self, tagList: list):$/;"	m	class:Content
jump_to_def	widgets/Editor.py	/^    def jump_to_def(self, word):$/;"	m	class:Editor
keyPressEvent	widgets/Content.py	/^    def keyPressEvent(self, event):$/;"	m	class:Content
keyPressEvent	widgets/Directory.py	/^    def keyPressEvent(self, event):$/;"	m	class:Directory
keyPressEvent	widgets/Editor.py	/^    def keyPressEvent(self, e):$/;"	m	class:Editor
keyPressEvent	widgets/Terminal.py	/^    def keyPressEvent(self, e):$/;"	m	class:PlainTextEdit
keyPressEvent	widgets/Terminal.py	/^    def keyPressEvent(self, event: QKeyEvent) -> None:$/;"	m	class:OutputTextEdit
keyPressEvent	widgets/TextEditor.py	/^    def keyPressEvent(self, e):$/;"	m	class:Editor
keyReleaseEvent	widgets/TextEditor.py	/^    def keyReleaseEvent(self, e):$/;"	m	class:Editor
keyword	config.json	/^        "keyword": {$/;"	o	object:files.c.highlighting
keyword	config.json	/^        "keyword": {$/;"	o	object:files.python.highlighting
keyword	config1.json	/^        "keyword": {$/;"	o	object:files.c.highlighting
keyword	config1.json	/^        "keyword": {$/;"	o	object:files.python.highlighting
keyword	config2.json	/^        "keyword": {$/;"	o	object:files.c.highlighting
keyword	config2.json	/^        "keyword": {$/;"	o	object:files.python.highlighting
keywords	config.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	a	object:files.python
keywords	config.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	a	object:files.c
keywords	config1.json	/^      "keywords": ["for", "class", "range", "finally", "is", "return", "continue", "for", "lambd/;"	a	object:files.python
keywords	config1.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	a	object:files.c
keywords	config2.json	/^      "keywords": ["for", "class", "range", "False", "finally", "is", "return", "None", "continu/;"	a	object:files.python
keywords	config2.json	/^      "keywords":["auto", "break", "case", "char", "const", "const", "continue", "default", "do"/;"	a	object:files.c
keywords	widgets/TextEditor.py	/^    def keywords(self, index):$/;"	m	class:PythonLexer
last_file	utils/lastOpenFile.py	/^last_file = ["resources\/lastFile.txt"]$/;"	v
last_file	utils/last_open_file.py	/^last_file = [LOCATION + "resources\/lastFile.txt"]$/;"	v
launch	main.py	/^def launch():$/;"	f
leaveEvent	widgets/foldArea.py	/^    def leaveEvent(self, event: QEvent) -> None:$/;"	m	class:FoldArea
lets_exit	main.py	/^    def lets_exit(self):$/;"	m	class:Main
lineSignal	widgets/Pythonhighlighter.py	/^    lineSignal = pyqtSignal(list)$/;"	v	class:SyntaxHighlighter
local_version	utils/check_update.py	/^def local_version():$/;"	f
look_for_dead_code	widgets/Events.py	/^    def look_for_dead_code(self, text):$/;"	m	class:Events
magic	config.json	/^        "magic": {$/;"	o	object:files.c.highlighting
magic	config.json	/^        "magic": {$/;"	o	object:files.python.highlighting
magic	config1.json	/^        "magic": {$/;"	o	object:files.c.highlighting
magic	config1.json	/^        "magic": {$/;"	o	object:files.python.highlighting
magic	config2.json	/^        "magic": {$/;"	o	object:files.c.highlighting
magic	config2.json	/^        "magic": {$/;"	o	object:files.python.highlighting
make_decision	utils/check_update.py	/^def make_decision(choice):$/;"	f
material_blue	resources/materialblack.py	/^material_blue = """$/;"	v
menuFont	config.json	/^    "menuFont": "Inconsolata",$/;"	s	object:editor
menuFont	config1.json	/^    "menuFont": "Monaco",$/;"	s	object:editor
menuFont	config2.json	/^    "menuFont": "Iosevka",$/;"	s	object:editor
menuFontSize	config.json	/^    "menuFontSize": 10.5,$/;"	n	object:editor
menuFontSize	config1.json	/^    "menuFontSize": 14,$/;"	n	object:editor
menuFontSize	config2.json	/^    "menuFontSize": 9,$/;"	n	object:editor
mouseMoveEvent	widgets/Editor.py	/^    def mouseMoveEvent(self, QMouseEvent):$/;"	m	class:Editor
mouseMoveEvent	widgets/Messagebox.py	/^    def mouseMoveEvent(self, event):$/;"	m	class:LineEdit
mouseMoveEvent	widgets/Terminal.py	/^    def mouseMoveEvent(self, event):$/;"	m	class:PlainTextEdit
mouseMoveEvent	widgets/foldArea.py	/^    def mouseMoveEvent(self, event: QMouseEvent) -> None:$/;"	m	class:FoldArea
mousePressEvent	widgets/Editor.py	/^    def mousePressEvent(self, e: QMouseEvent):$/;"	m	class:Editor
mousePressEvent	widgets/Terminal.py	/^    def mousePressEvent(self, a0: QMouseEvent) -> None:$/;"	m	class:Terminal
mousePressEvent	widgets/Terminal.py	/^    def mousePressEvent(self, e: QMouseEvent) -> None:$/;"	m	class:OutputTextEdit
mousePressEvent	widgets/Terminal.py	/^    def mousePressEvent(self, event):$/;"	m	class:PlainTextEdit
mousePressEvent	widgets/TextEditor.py	/^    def mousePressEvent(self, e):$/;"	m	class:Editor
mousePressEvent	widgets/foldArea.py	/^    def mousePressEvent(self, event: QMouseEvent):$/;"	m	class:FoldArea
mousePressEvent	widgets/numberBar.py	/^    def mousePressEvent(self, event: QMouseEvent):$/;"	m	class:NumberBar
mouseReleaseEvent	widgets/Editor.py	/^    def mouseReleaseEvent(self, e):$/;"	m	class:Editor
moveCursorDown	config.json	/^    "moveCursorDown": "Ctrl+M",$/;"	s	object:editor
moveCursorDown	config1.json	/^    "moveCursorDown": "Ctrl+M",$/;"	s	object:editor
moveCursorDown	config2.json	/^    "moveCursorDown": "Ctrl+M",$/;"	s	object:editor
moveCursorLeft	config.json	/^    "moveCursorLeft": "Ctrl+J"$/;"	s	object:editor
moveCursorLeft	config1.json	/^    "moveCursorLeft": "Ctrl+J",$/;"	s	object:editor
moveCursorLeft	config2.json	/^    "moveCursorLeft": "Ctrl+J"$/;"	s	object:editor
moveCursorPosBack	widgets/Editor.py	/^    def moveCursorPosBack(self):$/;"	m	class:Editor
moveCursorRight	config.json	/^    "moveCursorRight" : "Ctrl+L",$/;"	s	object:editor
moveCursorRight	config1.json	/^    "moveCursorRight" : "Ctrl+L",$/;"	s	object:editor
moveCursorRight	config2.json	/^    "moveCursorRight" : "Ctrl+L",$/;"	s	object:editor
moveCursorUp	config.json	/^    "moveCursorUp": "Ctrl+I",$/;"	s	object:editor
moveCursorUp	config1.json	/^    "moveCursorUp": "Ctrl+I",$/;"	s	object:editor
moveCursorUp	config2.json	/^    "moveCursorUp": "Ctrl+I",$/;"	s	object:editor
multiLineComment	config.json	/^        "multiLineComment": {$/;"	o	object:files.c.highlighting
multiLineComment	config.json	/^        "multiLineComment": {$/;"	o	object:files.python.highlighting
multiLineComment	config1.json	/^        "multiLineComment": {$/;"	o	object:files.c.highlighting
multiLineComment	config1.json	/^        "multiLineComment": {$/;"	o	object:files.python.highlighting
multiLineComment	config2.json	/^        "multiLineComment": {$/;"	o	object:files.c.highlighting
multiLineComment	config2.json	/^        "multiLineComment": {$/;"	o	object:files.python.highlighting
multiLineHighlight	widgets/Pythonhighlighter.py	/^    def multiLineHighlight(self, text):$/;"	m	class:PyHighlighter
name_highlighter	widgets/Terminal.py	/^class name_highlighter(QSyntaxHighlighter):$/;"	c
new	main.py	/^    def new(self):$/;"	m	class:Main
newFile	main.py	/^    def newFile(self):$/;"	m	class:Main
newFile	widgets/Directory.py	/^    def newFile(self):$/;"	m	class:Directory
newFile	widgets/Editor.py	/^    def newFile(self):$/;"	m	class:Editor
newProject	main.py	/^    def newProject(self):$/;"	m	class:Main
newProject	widgets/Messagebox.py	/^    def newProject(self):$/;"	m	class:MessageBox
newProjectFolder	main.py	/^    def newProjectFolder(self):$/;"	m	class:Main
noMatch	widgets/Messagebox.py	/^    def noMatch(self, word):$/;"	m	class:MessageBox
normal_cursor	widgets/Messagebox.py	/^    def normal_cursor(self):$/;"	m	class:NewProject
ok_pressed	widgets/Messagebox.py	/^    def ok_pressed(self):$/;"	m	class:GetHelp
ok_pressed	widgets/Messagebox.py	/^    def ok_pressed(self):$/;"	m	class:NoMatch
old_open	widgets/OpenFile.py	/^    def old_open(self):  # Deprecated$/;"	m	class:OpenFile
old_save	widgets/SaveFile.py	/^    def old_save(self, tab):  # Deprecated$/;"	m	class:SaveFile
onFirstOpen	widgets/Pythonhighlighter.py	/^    def onFirstOpen(self):$/;"	m	class:SyntaxHighlighter
onReadyReadStandardError	widgets/Terminal.py	/^    def onReadyReadStandardError(self):$/;"	m	class:Console
onReadyReadStandardError	widgets/Terminal.py	/^    def onReadyReadStandardError(self):$/;"	m	class:Terminal
onReadyReadStandardOutput	widgets/Terminal.py	/^    def onReadyReadStandardOutput(self):$/;"	m	class:Console
onReadyReadStandardOutput	widgets/Terminal.py	/^    def onReadyReadStandardOutput(self):$/;"	m	class:Terminal
onStart	main.py	/^    def onStart(self, index):$/;"	m	class:Main
online_version	utils/check_update.py	/^def online_version():$/;"	f
onlySpaces	widgets/Editor.py	/^    def onlySpaces(self, word: str) -> bool:$/;"	m	class:Editor
open	main.py	/^    def open(self):$/;"	m	class:Main
open	widgets/OpenFile.py	/^    def open(self):$/;"	m	class:OpenFile
openBrowser	main.py	/^    def openBrowser(self, url, word):$/;"	m	class:Main
openDirectory	widgets/Directory.py	/^    def openDirectory(self, path):$/;"	m	class:Directory
openFile	main.py	/^    def openFile(self, filename):$/;"	m	class:Main
openFile	widgets/Directory.py	/^    def openFile(self, signal):$/;"	m	class:Directory
openFile	widgets/Editor.py	/^    def openFile(self):$/;"	m	class:Editor
openFileFromMenu	main.py	/^    def openFileFromMenu(self):$/;"	m	class:Main
openMenu	widgets/Directory.py	/^    def openMenu(self, position):$/;"	m	class:Directory
openProject	main.py	/^    def openProject(self):$/;"	m	class:Main
openProjectF	main.py	/^    def openProjectF(self):$/;"	m	class:Main
openProjectWithPath	main.py	/^    def openProjectWithPath(self, path):$/;"	m	class:Main
open_documentation	main.py	/^    def open_documentation(self, data, word):$/;"	m	class:Main
opening	widgets/Content.py	/^    def opening(self, state: bool) -> None:$/;"	m	class:Content
openterm	main.py	/^    def openterm(self):$/;"	m	class:Main
openterminal	main.py	/^    def openterminal(self):$/;"	m	class:Main
our_start	widgets/OpenFile.py	/^    def our_start(self):$/;"	m	class:OpenFile
outputSignal	widgets/Terminal.py	/^    outputSignal = pyqtSignal(str)$/;"	v	class:Console
outputSignal	widgets/Terminal.py	/^    outputSignal = pyqtSignal(str)$/;"	v	class:Terminal
paintEvent	widgets/Editor.py	/^    def paintEvent(self, e: QPaintEvent):$/;"	m	class:Editor
paintEvent	widgets/Editor.py	/^    def paintEvent(self, event):$/;"	m	class:QLineNumberArea
paintEvent	widgets/foldArea.py	/^    def paintEvent(self, event: QPaintEvent):$/;"	m	class:FoldArea
paintEvent	widgets/numberBar.py	/^    def paintEvent(self, event: QPaintEvent):$/;"	m	class:NumberBar
parseTagFile	main.py	/^    def parseTagFile(self):$/;"	m	class:Main
pointSize	config.json	/^    "pointSize": 12,$/;"	n	object:editor
pointSize	config1.json	/^    "pointSize": 16,$/;"	n	object:editor
pointSize	config2.json	/^    "pointSize": 12,$/;"	n	object:editor
prepare_to_save	widgets/Content.py	/^    def prepare_to_save(self, array):$/;"	m	class:Content
print_text	widgets/IPythonWidget.py	/^    def print_text(self, text):$/;"	m	class:IPythonWidget
push_vars	widgets/IPythonWidget.py	/^    def push_vars(self, variableDict):$/;"	m	class:IPythonWidget
python	config.json	/^    "python": {$/;"	o	object:files
python	config1.json	/^    "python": {$/;"	o	object:files
python	config2.json	/^    "python": {$/;"	o	object:files
python_highlighter	widgets/TextEditor.py	/^    def python_highlighter(self):$/;"	m	class:Editor
quotation	config.json	/^        "quotation": {$/;"	o	object:files.c.highlighting
quotation	config.json	/^        "quotation": {$/;"	o	object:files.python.highlighting
quotation	config1.json	/^        "quotation": {$/;"	o	object:files.c.highlighting
quotation	config1.json	/^        "quotation": {$/;"	o	object:files.python.highlighting
quotation	config2.json	/^        "quotation": {$/;"	o	object:files.c.highlighting
quotation	config2.json	/^        "quotation": {$/;"	o	object:files.python.highlighting
quotation2	config.json	/^        "quotation2": {$/;"	o	object:files.python.highlighting
quotation2	config1.json	/^        "quotation2": {$/;"	o	object:files.python.highlighting
quotation2	config2.json	/^        "quotation2": {$/;"	o	object:files.python.highlighting
readAmountSignal	widgets/OpenFile.py	/^    readAmountSignal = pyqtSignal($/;"	v	class:OpenFile
readCompleted	widgets/Content.py	/^    def readCompleted(self, state: bool) -> None:$/;"	m	class:Content
readDone	widgets/OpenFile.py	/^    readDone = pyqtSignal(bool)$/;"	v	class:OpenFile
readDone	widgets/SaveFile.py	/^    readDone = pyqtSignal(bool)$/;"	v	class:SaveFile
readyToShow	widgets/Content.py	/^    readyToShow = pyqtSignal(bool)$/;"	v	class:Content
realterminal	main.py	/^    def realterminal(self):$/;"	m	class:Main
remove	widgets/Terminal.py	/^    def remove(self):$/;"	m	class:Console
remove	widgets/Terminal.py	/^    def remove(self):$/;"	m	class:Terminal
resize_contents	widgets/Messagebox.py	/^    def resize_contents(self):$/;"	m	class:LineEdit
returnCursorToNormal	widgets/Editor.py	/^    def returnCursorToNormal(self):$/;"	m	class:Editor
returnCursorToNormal	widgets/foldArea.py	/^    def returnCursorToNormal(self) -> None:$/;"	m	class:FoldArea
run	main.py	/^    def run(self):$/;"	m	class:UpdateThread
run	utils/find_utility.py	/^    def run(self):$/;"	m	class:DocumentSearch
run	utils/find_utility.py	/^    def run(self):$/;"	m	class:grabFiles
run	widgets/Events.py	/^    def run(self):$/;"	m	class:DeadCodeCheker
run	widgets/Messagebox.py	/^    def run(self, str, fileName):$/;"	m	class:MessageBox
run	widgets/OpenFile.py	/^    def run(self):$/;"	m	class:OpenFile
run	widgets/SaveFile.py	/^    def run(self) -> None:$/;"	m	class:SaveFile
run	widgets/Terminal.py	/^    def run(self, command):$/;"	m	class:Terminal
run	widgets/Terminal.py	/^    def run(self, command, path):  # Takes in the command and the path of the file$/;"	m	class:Console
runFile	widgets/Editor.py	/^    def runFile(self):$/;"	m	class:Editor
save	main.py	/^    def save(self):$/;"	m	class:Main
save	widgets/SaveFile.py	/^    def save(self, tab):$/;"	m	class:SaveFile
saveAs	main.py	/^    def saveAs(self):$/;"	m	class:Main
saveFile	main.py	/^    def saveFile(self):$/;"	m	class:Main
saveFileAs	main.py	/^    def saveFileAs(self):$/;"	m	class:Main
saveMaybe	widgets/Messagebox.py	/^    def saveMaybe(self, file, tabCounter, tab, index):$/;"	m	class:MessageBox
saving	widgets/Content.py	/^    def saving(self, state: bool) -> None:$/;"	m	class:Content
searchFor	widgets/Content.py	/^    def searchFor(self, searchCommand: str):$/;"	m	class:Content
selectAllWordsBeforeCursor	config.json	/^    "selectAllWordsBeforeCursor": "Ctrl+K",$/;"	s	object:editor
selectAllWordsBeforeCursor	config1.json	/^    "selectAllWordsBeforeCursor": "Ctrl+K",$/;"	s	object:editor
selectAllWordsBeforeCursor	config2.json	/^    "selectAllWordsBeforeCursor": "Ctrl+K",$/;"	s	object:editor
self	config.json	/^        "self": {$/;"	o	object:files.python.highlighting
self	config1.json	/^        "self": {$/;"	o	object:files.python.highlighting
self	config2.json	/^        "self": {$/;"	o	object:files.python.highlighting
setCompleter	widgets/Content.py	/^    def setCompleter(self, completer):$/;"	m	class:Content
setDefaultSettings	widgets/TextEditor.py	/^    def setDefaultSettings(self, lexer):$/;"	m	class:Editor
setFold	widgets/TextEditor.py	/^    def setFold(self):$/;"	m	class:Editor
setFoldLines	widgets/Editor.py	/^    def setFoldLines(self, lines: list):$/;"	m	class:Editor
setFoldLines	widgets/numberBar.py	/^    def setFoldLines(self, lines: dict):$/;"	m	class:NumberBar
setIgnoreLength	widgets/Terminal.py	/^    def setIgnoreLength(self, length: int) -> None:$/;"	m	class:OutputTextEdit
setPureText	widgets/Messagebox.py	/^    def setPureText(self, a0: str) -> None:$/;"	m	class:LineEdit
setPythonAutocomplete	widgets/TextEditor.py	/^    def setPythonAutocomplete(self):$/;"	m	class:Editor
set_brace_colors	widgets/TextEditor.py	/^    def set_brace_colors($/;"	m	class:Editor
set_indentation_settings	widgets/TextEditor.py	/^    def set_indentation_settings(self):$/;"	m	class:Editor
set_linenumbers	widgets/TextEditor.py	/^    def set_linenumbers(self, fontmetrics):$/;"	m	class:Editor
set_up_tooltips	widgets/TextEditor.py	/^    def set_up_tooltips(self):$/;"	m	class:Editor
showConsole	widgets/Tabs.py	/^    def showConsole(self):$/;"	m	class:Tabs
showDirectory	widgets/Tabs.py	/^    def showDirectory(self):$/;"	m	class:Tabs
showFileExecuter	widgets/Tabs.py	/^    def showFileExecuter(self):$/;"	m	class:Tabs
showPath	utils/find_utility.py	/^    def showPath(self, path):$/;"	m	class:DocumentSearch
show_or_not	widgets/Messagebox.py	/^    def show_or_not(self):$/;"	m	class:GetHelp
show_update	utils/check_update.py	/^def show_update():$/;"	f
singleLineComment	config.json	/^        "singleLineComment": {$/;"	o	object:files.c.highlighting
singleLineComment	config.json	/^        "singleLineComment": {$/;"	o	object:files.python.highlighting
singleLineComment	config1.json	/^        "singleLineComment": {$/;"	o	object:files.c.highlighting
singleLineComment	config1.json	/^        "singleLineComment": {$/;"	o	object:files.python.highlighting
singleLineComment	config2.json	/^        "singleLineComment": {$/;"	o	object:files.c.highlighting
singleLineComment	config2.json	/^        "singleLineComment": {$/;"	o	object:files.python.highlighting
sizeHint	widgets/Editor.py	/^    def sizeHint(self):$/;"	m	class:QLineNumberArea
split2Tabs	main.py	/^    def split2Tabs(self):$/;"	m	class:Main
start_opening	widgets/Content.py	/^    def start_opening(self):$/;"	m	class:Content
start_saving	widgets/Content.py	/^    def start_saving(self):$/;"	m	class:Content
statusBarFont	config.json	/^    "statusBarFont": "Monaco",$/;"	s	object:editor
statusBarFont	config1.json	/^    "statusBarFont": "Monaco",$/;"	s	object:editor
statusBarFont	config2.json	/^    "statusBarFont": "Monaco",$/;"	s	object:editor
statusBarFontSize	config.json	/^    "statusBarFontSize": 14,$/;"	n	object:editor
statusBarFontSize	config1.json	/^    "statusBarFontSize": 14,$/;"	n	object:editor
statusBarFontSize	config2.json	/^    "statusBarFontSize": 14,$/;"	n	object:editor
stop	widgets/IPythonWidget.py	/^        def stop():$/;"	f	member:IPythonWidget.__init__	file:
success	widgets/Messagebox.py	/^    def success(self, directory):$/;"	m	class:MessageBox
switchTabs	main.py	/^    def switchTabs(self):$/;"	m	class:Main
tabFont	config.json	/^    "tabFont": "Iosevka",$/;"	s	object:editor
tabFont	config1.json	/^    "tabFont": "Monaco",$/;"	s	object:editor
tabFont	config2.json	/^    "tabFont": "Iosevka",$/;"	s	object:editor
tabFontSize	config.json	/^    "tabFontSize": 10.5,$/;"	n	object:editor
tabFontSize	config1.json	/^    "tabFontSize": 14,$/;"	n	object:editor
tabFontSize	config2.json	/^    "tabFontSize": 3,$/;"	n	object:editor
tabMovable	config.json	/^    "tabMovable": true,$/;"	b	object:editor
tabMovable	config1.json	/^    "tabMovable": true,$/;"	b	object:editor
tabMovable	config2.json	/^    "tabMovable": true,$/;"	b	object:editor
tabShape	config.json	/^    "tabShape": false,$/;"	b	object:editor
tabShape	config1.json	/^    "tabShape": false,$/;"	b	object:editor
tabShape	config2.json	/^    "tabShape": true,$/;"	b	object:editor
temp	main.py	/^    def temp(self):$/;"	m	class:Main
terminate	widgets/Terminal.py	/^    def terminate(self):$/;"	m	class:Console
textSignal	main.py	/^    textSignal = pyqtSignal(str)$/;"	v	class:UpdateThread
textUnderCursor	widgets/Content.py	/^    def textUnderCursor(self):$/;"	m	class:Content
textUnderCursor	widgets/Editor.py	/^    def textUnderCursor(self):$/;"	m	class:Editor
textUnderCursor	widgets/Terminal.py	/^    def textUnderCursor(self):$/;"	m	class:PlainTextEdit
tokenize	utils/completer_utility.py	/^def tokenize(file):$/;"	f
tokenize_file	widgets/Content.py	/^    def tokenize_file(self):$/;"	m	class:Content
totalLines	widgets/Editor.py	/^    def totalLines(self):$/;"	m	class:Editor
trigger	utils/find_utility.py	/^    def trigger(self):$/;"	m	class:DocumentSearch
unfold	widgets/foldArea.py	/^    def unfold(self, block: QTextBlock):$/;"	m	class:FoldArea
unsetFold	widgets/TextEditor.py	/^    def unsetFold(self):$/;"	m	class:Editor
updateAutoComplete	widgets/TextEditor.py	/^    def updateAutoComplete(self, file_path=None):$/;"	m	class:Editor
updateOffset	widgets/SaveFile.py	/^    updateOffset = pyqtSignal(int)$/;"	v	class:SaveFile
updateOnScroll	widgets/foldArea.py	/^    def updateOnScroll(self, rect: QRect, scroll: int):$/;"	m	class:FoldArea
updateOnScroll	widgets/numberBar.py	/^    def updateOnScroll(self, rect: QRect, scroll: int):$/;"	m	class:NumberBar
updateWidth	widgets/foldArea.py	/^    def updateWidth(self, blockCount: int):$/;"	m	class:FoldArea
updateWidth	widgets/numberBar.py	/^    def updateWidth(self, blockCount: int):$/;"	m	class:NumberBar
update_Hydra	main.py	/^    def update_Hydra(self):$/;"	m	class:Main
update_previous_file	utils/lastOpenFile.py	/^def update_previous_file(filepath):$/;"	f
update_previous_file	utils/last_open_file.py	/^def update_previous_file(filepath=last_file[0]):$/;"	f
userInputSignal	widgets/Terminal.py	/^    userInputSignal = pyqtSignal(str)$/;"	v	class:OutputTextEdit
visibleBlocks	widgets/Editor.py	/^    def visibleBlocks(self):$/;"	m	class:Editor
visibleBlocks	widgets/Pythonhighlighter.py	/^    def visibleBlocks(self):$/;"	m	class:SyntaxHighlighter
windowColor	config.json	/^    "windowColor": "#303030",$/;"	s	object:editor
windowColor	config1.json	/^    "windowColor": "#212121",$/;"	s	object:editor
windowColor	config2.json	/^    "windowColor": "#303030",$/;"	s	object:editor
windowStaysOnTop	config.json	/^    "windowStaysOnTop": false,$/;"	b	object:editor
windowStaysOnTop	config1.json	/^    "windowStaysOnTop": false,$/;"	b	object:editor
windowStaysOnTop	config2.json	/^    "windowStaysOnTop": false,$/;"	b	object:editor
windowText	config.json	/^    "windowText": "#FFFFFF",$/;"	s	object:editor
windowText	config1.json	/^    "windowText": "#FFFFFF",$/;"	s	object:editor
windowText	config2.json	/^    "windowText": "#FFFFFF",$/;"	s	object:editor
wordList	utils/completer_utility.py	/^wordList = [$/;"	v
wordList	utils/completer_utility.py	/^wordList = sorted(wordList)$/;"	v
write_dead_code_info	main.py	/^    def write_dead_code_info(self, text):$/;"	m	class:Main
xml_highlighter	widgets/TextEditor.py	/^    def xml_highlighter(self):$/;"	m	class:Editor
